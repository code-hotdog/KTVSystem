{"remainingRequest":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\babel-loader\\lib\\index.js!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\src\\views\\language.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\src\\views\\language.vue","mtime":1585972675000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport isExit from '@/config/addSong';\nexport default {\n  name: \"language\",\n  data: function data() {\n    return {\n      languageSongs: [],\n      languageOption: [\"汉语歌曲\", \"粤语歌曲\", \"韩语歌曲\", \"日语歌曲\", \"英语歌曲\"],\n      allTableData: [],\n      paginations: {\n        page_index: 1,\n        // 当前位于哪页\n        total: 0,\n        // 总数\n        page_size: 8,\n        // 1页显示多少条\n        page_sizes: [8, 15, 20, 25],\n        //每页显示多少条\n        layout: \"total, sizes, prev, pager, next, jumper\" // 翻页属性\n\n      }\n    };\n  },\n  created: function created() {\n    this.getLanguageSongs();\n  },\n  methods: {\n    // 添加歌曲\n    addSong: function addSong(song) {\n      isExit(song);\n    },\n    // 获取所有ktv推荐歌曲\n    getLanguageSongs: function getLanguageSongs(language, index) {\n      var _this = this;\n\n      if (language) {\n        language = language.slice(0, 2);\n        $(\".selectLanguage\").css(\"background\", \"transparent\");\n        $(\".selectLanguage\").eq(index).css(\"background\", \"rgba(0, 0, 0, .1)\");\n        this.$axios.post(\"http://localhost:8633/api/music/language\", {\n          language: language\n        }).then(function (res) {\n          _this.languageSongs = res.data;\n          _this.allTableData = res.data;\n\n          _this.setPaginations();\n        });\n      } else {\n        this.$axios.post(\"http://localhost:8633/api/music/all\").then(function (res) {\n          _this.languageSongs = res.data;\n          _this.allTableData = res.data;\n\n          _this.setPaginations();\n        });\n      }\n    },\n    // 设置当前页\n    handleCurrentChange: function handleCurrentChange(page) {\n      var _this2 = this;\n\n      // 获取当前页\n      var sortnum = this.paginations.page_size * (page - 1);\n      var table = this.allTableData.filter(function (item, index) {\n        return index >= sortnum;\n      }); // 设置默认分页数据\n\n      this.languageSongs = table.filter(function (item, index) {\n        return index < _this2.paginations.page_size;\n      });\n      this.languageSongs = table.filter(function (item, index) {\n        return index < _this2.paginations.page_size;\n      });\n    },\n    // 改变每页条数\n    handleSizeChange: function handleSizeChange(page_size) {\n      // 切换size\n      this.paginations.page_index = 1;\n      this.paginations.page_size = page_size;\n      this.languageSongs = this.allTableData.filter(function (item, index) {\n        return index < page_size;\n      });\n    },\n    // 设置的分页\n    setPaginations: function setPaginations() {\n      var _this3 = this;\n\n      // 总页数\n      this.paginations.total = this.allTableData.length;\n      this.paginations.page_index = 1;\n      this.paginations.page_size = 8; // 设置默认分页数据\n\n      this.languageSongs = this.allTableData.filter(function (item, index) {\n        return index < _this3.paginations.page_size;\n      });\n    }\n  }\n};",{"version":3,"sources":["language.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"language\">\n        <div class=\"leftBar\">\n            <Row @click.native=\"getLanguageSongs(item, index)\" v-for=\"(item, index) in languageOption\" class=\"selectLanguage\" :key=\"index\">\n                {{item}}\n            </Row>\n        </div>\n        <div class=\"wrapper\">\n            <Row style=\"padding:20px 150px;color:#fff;font-size:18px;font-weight:700;\">\n                <Col :span=\"3\" style=\"cursor:default;\">\n                    封面\n                </Col>\n                <Col :span=\"6\" style=\"cursor:default;padding-right:20px;\">\n                    歌曲\n                </Col>\n                <Col :span=\"6\" style=\"cursor:default;\">\n                    歌手\n                </Col>\n                <Col :span=\"4\" style=\"cursor:default;\">\n                    点播次数\n                </Col>\n                <Col :span=\"3\" style=\"text-align:center;cursor:pointer;\">\n                    播放列表\n                </Col>\n            </Row>\n            <Row class=\"row-song\" style=\"padding:20px 150px;\" v-for=\"(item, index) in languageSongs\" :key=\"index\">\n                <Col :span=\"3\" style=\"cursor:default;\">\n                    <Avatar :src=\"'http://localhost:8633/api/music/poster?img=' + item.poster\" />\n                </Col>\n                <Col :span=\"6\" style=\"cursor:default;padding-right:20px;\">\n                    {{item.songName}}\n                </Col>\n                <Col :span=\"6\" style=\"cursor:default;\">\n                    {{item.artist}}\n                </Col>\n                <Col :span=\"4\" style=\"cursor:default;\">\n                    被点{{item.playcount}}次\n                </Col>\n                <Col :span=\"3\" @click.native=\"addSong(item)\" style=\"text-align:center;cursor:pointer;\">\n                    添加\n                </Col>\n            </Row>\n            <!-- 分页 -->\n            <Row>\n                <Col span=\"24\" style=\"text-align:right;padding:10px;\">\n                    <el-pagination\n                        v-if='paginations.total > 0'\n                        :page-sizes=\"paginations.page_sizes\"\n                        :page-size=\"paginations.page_size\"\n                        :layout=\"paginations.layout\"\n                        :total=\"paginations.total\"\n                        :current-page.sync='paginations.page_index'\n                        @current-change='handleCurrentChange'\n                        @size-change='handleSizeChange'>\n                    </el-pagination>\n                </Col>\n            </Row>\n        </div>\n    </div>\n</template>\n<script>\nimport isExit from '@/config/addSong'\nexport default {\n    name:\"language\",\n    data(){\n        return{\n            languageSongs:[],\n            languageOption:[\"汉语歌曲\", \"粤语歌曲\", \"韩语歌曲\", \"日语歌曲\", \"英语歌曲\"],\n            allTableData:[],\n            paginations: {\n                page_index: 1, // 当前位于哪页\n                total: 0, // 总数\n                page_size: 8, // 1页显示多少条\n                page_sizes: [8, 15, 20, 25], //每页显示多少条\n                layout: \"total, sizes, prev, pager, next, jumper\" // 翻页属性\n            },\n        }\n    },\n    created(){\n        this.getLanguageSongs();\n    },\n    methods:{\n         // 添加歌曲\n        addSong(song){\n            isExit(song);\n        },\n        // 获取所有ktv推荐歌曲\n        getLanguageSongs(language, index){\n            if(language){\n                language = language.slice(0,2);\n                $(\".selectLanguage\").css(\"background\",\"transparent\");\n                $(\".selectLanguage\").eq(index).css(\"background\",\"rgba(0, 0, 0, .1)\");\n                this.$axios.post(\"http://localhost:8633/api/music/language\", {language})\n                    .then(res => {\n                        this.languageSongs = res.data;\n                        this.allTableData = res.data;\n                        this.setPaginations();\n                    })\n            }else{\n                this.$axios.post(\"http://localhost:8633/api/music/all\")\n                    .then(res => {\n                        this.languageSongs = res.data;\n                        this.allTableData = res.data;\n                        this.setPaginations();\n                    })\n            }\n            \n        },\n        // 设置当前页\n        handleCurrentChange(page) {\n            // 获取当前页\n            let sortnum = this.paginations.page_size * (page - 1);\n            let table = this.allTableData.filter((item, index) => {\n                return index >= sortnum;\n            });\n            // 设置默认分页数据\n            this.languageSongs = table.filter((item, index) => {\n                return index < this.paginations.page_size;\n            });\n            this.languageSongs = table.filter((item, index) => {\n                return index < this.paginations.page_size;\n            });\n        },\n        // 改变每页条数\n        handleSizeChange(page_size) {\n            // 切换size\n            this.paginations.page_index = 1;\n            this.paginations.page_size = page_size;\n            this.languageSongs = this.allTableData.filter((item, index) => {\n                return index < page_size;\n            });\n        },\n        // 设置的分页\n        setPaginations() {\n            // 总页数\n            this.paginations.total = this.allTableData.length;\n            this.paginations.page_index = 1;\n            this.paginations.page_size = 8;\n            // 设置默认分页数据\n            this.languageSongs = this.allTableData.filter((item, index) => {\n                return index < this.paginations.page_size;\n            });\n        },\n    }\n}\n</script>\n<style lang=\"less\" scoped>\n.language{\n    width: 100%;\n    height: 100%;\n    color: rgb(219, 217, 217);\n    position: relative;\n    display: flex;\n\n    .leftBar{\n        width: 300px;\n        position: relative;\n        padding: 100px 50px;\n        overflow-y: scroll;\n\n        .selectLanguage{\n            padding:20px 0px;\n            font-weight:700;\n            font-size:18px;\n            text-align:center;\n            cursor:pointer;\n            border-radius: 30px;\n            &:hover{\n                background-color: rgba(0, 0, 0, .1);\n            }\n        }\n    }\n    .wrapper{\n        flex:1;\n        position: absolute;\n        z-index: 100;\n        top: 0px;\n        margin-left: 300px;\n        width: 1200px;\n        height: 100%;\n        overflow-y: scroll;\n        padding: 0px 20px;\n\n        .row-song{\n            border-radius: 30px;\n            &:hover{\n                background-color: rgba(0, 0, 0, .1);\n            }\n        }\n    }\n    \n}\n::-webkit-scrollbar {\n      width: 6px;\n      height: 6px;\n  }\n  ::-webkit-scrollbar-track {\n      border-radius: 3px;\n      background: rgba(0,0,0,0.06);\n      -webkit-box-shadow: inset 0 0 3px rgba(0,0,0,0.08);\n  }\n  /* 滚动条滑块 */\n  ::-webkit-scrollbar-thumb {\n      border-radius: 3px;\n      background: rgba(236, 233, 233, 0.1);\n      -webkit-box-shadow: inset 0 0 10px rgba(0,0,0,0.2);\n  }\n</style>"],"sourceRoot":"src/views"}]}