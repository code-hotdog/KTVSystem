{"remainingRequest":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\babel-loader\\lib\\index.js!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\src\\store.js","dependencies":[{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\src\\store.js","mtime":1585972675000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex); // import userStore from \"@/stores/userStore\"\n\nimport musicStore from \"@/stores/song\";\nvar state = {\n  isAuthorizated: false,\n  user: {}\n};\nvar getters = {\n  isAuthorizated: function isAuthorizated(state) {\n    return state.isAuthorizated;\n  },\n  user: function user(state) {\n    return state.user;\n  }\n};\nvar mutations = {\n  setAuthorizated: function setAuthorizated(state, authorization) {\n    state.isAuthorizated = authorization;\n  },\n  setUser: function setUser(state, user) {\n    state.user = user;\n  }\n};\nvar actions = {\n  setAuthorizated: function setAuthorizated(_ref, authorization) {\n    var commit = _ref.commit;\n    commit(\"setAuthorizated\", authorization);\n  },\n  setUser: function setUser(_ref2, user) {\n    var commit = _ref2.commit;\n    commit(\"setUser\", user);\n  },\n  clearState: function clearState(_ref3) {\n    var commit = _ref3.commit;\n    commit(\"setAuthorizated\", false);\n    commit(\"setUser\", null);\n    localStorage.removeItem(\"userToken\");\n    localStorage.removeItem(\"currentSong\");\n    localStorage.removeItem(\"playModle\");\n    localStorage.removeItem(\"songList\");\n  }\n};\nvar vueStore = new Vuex.Store({\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions,\n  modules: {\n    musicStore: musicStore\n  }\n});\nexport default vueStore;",{"version":3,"sources":["D:/研课程/ktv-select_music-system-master/ktv-select_music-system-master/ktv-client/src/store.js"],"names":["Vue","Vuex","use","musicStore","state","isAuthorizated","user","getters","mutations","setAuthorizated","authorization","setUser","actions","commit","clearState","localStorage","removeItem","vueStore","Store","modules"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR,E,CAEA;;AACA,OAAOE,UAAP,MAAuB,eAAvB;AAGA,IAAMC,KAAK,GAAG;AACVC,EAAAA,cAAc,EAAC,KADL;AAEVC,EAAAA,IAAI,EAAC;AAFK,CAAd;AAIA,IAAMC,OAAO,GAAG;AACZF,EAAAA,cAAc,EAAC,wBAAAD,KAAK;AAAA,WAAIA,KAAK,CAACC,cAAV;AAAA,GADR;AAEZC,EAAAA,IAAI,EAAC,cAAAF,KAAK;AAAA,WAAIA,KAAK,CAACE,IAAV;AAAA;AAFE,CAAhB;AAIA,IAAME,SAAS,GAAG;AACdC,EAAAA,eADc,2BACEL,KADF,EACSM,aADT,EACuB;AACjCN,IAAAA,KAAK,CAACC,cAAN,GAAuBK,aAAvB;AACH,GAHa;AAIdC,EAAAA,OAJc,mBAINP,KAJM,EAICE,IAJD,EAIM;AAChBF,IAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACH;AANa,CAAlB;AAQA,IAAMM,OAAO,GAAG;AACZH,EAAAA,eAAe,EAAC,+BAAWC,aAAX,EAA6B;AAAA,QAA3BG,MAA2B,QAA3BA,MAA2B;AACzCA,IAAAA,MAAM,CAAC,iBAAD,EAAoBH,aAApB,CAAN;AACH,GAHW;AAIZC,EAAAA,OAAO,EAAC,wBAAWL,IAAX,EAAoB;AAAA,QAAlBO,MAAkB,SAAlBA,MAAkB;AACxBA,IAAAA,MAAM,CAAC,SAAD,EAAYP,IAAZ,CAAN;AACH,GANW;AAOZQ,EAAAA,UAAU,EAAC,2BAAc;AAAA,QAAZD,MAAY,SAAZA,MAAY;AACrBA,IAAAA,MAAM,CAAC,iBAAD,EAAoB,KAApB,CAAN;AACAA,IAAAA,MAAM,CAAC,SAAD,EAAY,IAAZ,CAAN;AACAE,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACAD,IAAAA,YAAY,CAACC,UAAb,CAAwB,aAAxB;AACAD,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACAD,IAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACH;AAdW,CAAhB;AAiBA,IAAMC,QAAQ,GAAG,IAAIhB,IAAI,CAACiB,KAAT,CAAe;AAC5Bd,EAAAA,KAAK,EAALA,KAD4B;AAE5BG,EAAAA,OAAO,EAAPA,OAF4B;AAG5BC,EAAAA,SAAS,EAATA,SAH4B;AAI5BI,EAAAA,OAAO,EAAPA,OAJ4B;AAK5BO,EAAAA,OAAO,EAAC;AACJhB,IAAAA,UAAU,EAAVA;AADI;AALoB,CAAf,CAAjB;AAUA,eAAec,QAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\n// import userStore from \"@/stores/userStore\"\nimport musicStore from \"@/stores/song\"\n\n\nconst state = {\n    isAuthorizated:false,\n    user:{},\n};\nconst getters = {\n    isAuthorizated:state => state.isAuthorizated,\n    user:state => state.user,\n};\nconst mutations = {\n    setAuthorizated(state, authorization){\n        state.isAuthorizated = authorization;\n    },\n    setUser(state, user){\n        state.user = user;\n    },\n};\nconst actions = {\n    setAuthorizated:({commit}, authorization) => {\n        commit(\"setAuthorizated\", authorization);\n    },\n    setUser:({commit}, user) => {\n        commit(\"setUser\", user);\n    },\n    clearState:({commit}) => {\n        commit(\"setAuthorizated\", false);\n        commit(\"setUser\", null);\n        localStorage.removeItem(\"userToken\");\n        localStorage.removeItem(\"currentSong\");\n        localStorage.removeItem(\"playModle\");\n        localStorage.removeItem(\"songList\");\n    }\n};\n\nconst vueStore = new Vuex.Store({\n    state,\n    getters,\n    mutations,\n    actions,\n    modules:{\n        musicStore\n    }\n})\n\nexport default vueStore\n"]}]}