{"remainingRequest":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\babel-loader\\lib\\index.js!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\src\\stores\\song.js","dependencies":[{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\src\\stores\\song.js","mtime":1585972675000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { stat } from \"fs\";\n/** \n*\n*  @author: Mr_Wei \n*  @version: 1.0.0 \n*  @description: 储存歌曲信息\n*  @Date: 2019/10/20 08:46\n*\n*/\n\nvar state = {\n  songList: localStorage.songList ? JSON.parse(localStorage.getItem(\"songList\")) : [],\n  currentSong: localStorage.currentSong ? JSON.parse(localStorage.getItem(\"currentSong\"))[0] : '',\n  playModle: localStorage.playModle ? localStorage.getItem(\"playModle\") : -1,\n  volume: 0\n};\nvar getters = {\n  songList: function songList(state) {\n    return state.songList;\n  },\n  songListLen: function songListLen(state) {\n    return state.songList.length;\n  },\n  currentSong: function currentSong(state) {\n    return state.currentSong;\n  },\n  playModle: function playModle(state) {\n    return state.playModle;\n  },\n  volume: function volume(state) {\n    return state.volume;\n  }\n};\nvar mutations = {\n  setSongList: function setSongList(state, songInfo) {\n    state.songList.push(songInfo);\n  },\n  setAllSong: function setAllSong(state, songlist) {\n    state.songList = songlist;\n  },\n  setCurrentSong: function setCurrentSong(state, songinfo) {\n    state.currentSong = songinfo;\n  },\n  setPlayModle: function setPlayModle(state, modle) {\n    state.playModle = modle;\n    localStorage.setItem(\"playModle\", modle);\n  },\n  setVolume: function setVolume(state, v) {\n    if (v > 0) {\n      if (state.volume < 0.95) {\n        state.volume += v;\n      }\n    } else {\n      if (state.volume > 0.05) {\n        state.volume -= v;\n      }\n    }\n  }\n};\nvar actions = {\n  setSongList: function setSongList(_ref, songInfo) {\n    var commit = _ref.commit;\n    commit(\"setSongList\", songInfo);\n  },\n  setAllSong: function setAllSong(_ref2, songlist) {\n    var commit = _ref2.commit;\n    commit(\"setAllSong\", songlist);\n  },\n  setCurrentSong: function setCurrentSong(_ref3, songinfo) {\n    var commit = _ref3.commit;\n    commit(\"setCurrentSong\", songinfo);\n  },\n  setPlayModle: function setPlayModle(_ref4, modle) {\n    var commit = _ref4.commit;\n    commit(\"setPlayModle\", modle);\n  },\n  setVolume: function setVolume(_ref5, v) {\n    var commit = _ref5.commit;\n    commit(\"setVolume\", v);\n  }\n};\nvar musicStore = {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};\nexport default musicStore;",{"version":3,"sources":["D:/研课程/ktv-select_music-system-master/ktv-select_music-system-master/ktv-client/src/stores/song.js"],"names":["stat","state","songList","localStorage","JSON","parse","getItem","currentSong","playModle","volume","getters","songListLen","length","mutations","setSongList","songInfo","push","setAllSong","songlist","setCurrentSong","songinfo","setPlayModle","modle","setItem","setVolume","v","actions","commit","musicStore"],"mappings":"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","sourcesContent":["import { stat } from \"fs\";\n\n/** \n*\n*  @author: Mr_Wei \n*  @version: 1.0.0 \n*  @description: 储存歌曲信息\n*  @Date: 2019/10/20 08:46\n*\n*/ \nconst state = {\n    songList: localStorage.songList ? JSON.parse(localStorage.getItem(\"songList\")) : [],\n    currentSong : localStorage.currentSong ? JSON.parse(localStorage.getItem(\"currentSong\"))[0] : '',\n    playModle : localStorage.playModle ? localStorage.getItem(\"playModle\") : -1,\n    volume:0,\n};\nconst getters = {\n    songList:state => state.songList,\n    songListLen:state => state.songList.length,\n    currentSong:state => state.currentSong,\n    playModle:state => state.playModle,\n    volume:state => state.volume\n};\nconst mutations = {\n    setSongList(state, songInfo){\n        state.songList.push(songInfo);\n    },\n    setAllSong(state, songlist){\n        state.songList = songlist;\n    },\n    setCurrentSong(state, songinfo){\n        state.currentSong = songinfo;\n    },\n    setPlayModle(state, modle){\n        state.playModle = modle;\n        localStorage.setItem(\"playModle\", modle)\n    },\n    setVolume(state, v){\n        if(v > 0){\n            if(state.volume < 0.95){\n                state.volume += v;\n            }\n        }else{\n            if(state.volume > 0.05){\n                state.volume -= v;\n            }\n        }\n    }\n};\nconst actions = {\n    setSongList:({commit}, songInfo) => {\n        commit(\"setSongList\", songInfo);\n    },\n    setAllSong:({commit}, songlist) => {\n        commit(\"setAllSong\", songlist);\n    },\n    setCurrentSong:({commit}, songinfo) => {\n        commit(\"setCurrentSong\", songinfo);\n    },\n    setPlayModle({commit}, modle){\n        commit(\"setPlayModle\", modle);\n    },\n    setVolume({commit}, v){\n        commit(\"setVolume\", v);\n    }\n}\n\nconst musicStore = {\n    state,\n    getters,\n    mutations,\n    actions\n}\n\nexport default musicStore"]}]}