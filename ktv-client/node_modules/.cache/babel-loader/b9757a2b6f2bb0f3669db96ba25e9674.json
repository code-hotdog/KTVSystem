{"remainingRequest":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\babel-loader\\lib\\index.js!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\src\\config\\addSong.js","dependencies":[{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\src\\config\\addSong.js","mtime":1585972675000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n\n/** \n*\n*  @author: Mr_Wei \n*  @version: 1.0.0 \n*  @description: 添加歌曲方法\n*  @Date: 2019/10/20 08:58\n*\n*/\nimport store from \"@/store\";\nimport { MessageBox } from 'element-ui';\n\nfunction isExit(songInfo) {\n  var songList = store.getters.songList;\n\n  if (songList.length == 0) {\n    localStorage.setItem(\"currentSong\", JSON.stringify(songInfo));\n    localStorage.setItem(\"play\", 1);\n    store.dispatch(\"setCurrentSong\", songInfo);\n  }\n\n  var isexit = false;\n  songList.forEach(function (item) {\n    item._id == songInfo._id ? isexit = true : \"\";\n  });\n\n  if (isexit) {\n    MessageBox.confirm(\"歌曲已添加,请勿重复添加\", \"提示\", {\n      confirmButtonText: \"确定\",\n      cancelButtonText: \"取消\",\n      type: \"warning\"\n    }).then(function () {}).catch(function () {});\n    return false;\n  } else {\n    store.dispatch(\"setSongList\", songInfo);\n    var list = store.getters.songList;\n    localStorage.setItem(\"songList\", JSON.stringify(list));\n    console.log(\"已添加\");\n    return true;\n  }\n}\n\nexport default isExit;",{"version":3,"sources":["D:/研课程/ktv-select_music-system-master/ktv-select_music-system-master/ktv-client/src/config/addSong.js"],"names":["store","MessageBox","isExit","songInfo","songList","getters","length","localStorage","setItem","JSON","stringify","dispatch","isexit","forEach","item","_id","confirm","confirmButtonText","cancelButtonText","type","then","catch","list","console","log"],"mappings":";;AAAA;;;;;;;;AAQA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,SAASC,MAAT,CAAgBC,QAAhB,EAAyB;AACrB,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,OAAN,CAAcD,QAA/B;;AACA,MAAGA,QAAQ,CAACE,MAAT,IAAmB,CAAtB,EAAwB;AACpBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeP,QAAf,CAApC;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,CAA7B;AACAR,IAAAA,KAAK,CAACW,QAAN,CAAe,gBAAf,EAAiCR,QAAjC;AACH;;AACD,MAAIS,MAAM,GAAG,KAAb;AACAR,EAAAA,QAAQ,CAACS,OAAT,CAAiB,UAAAC,IAAI,EAAI;AACrBA,IAAAA,IAAI,CAACC,GAAL,IAAYZ,QAAQ,CAACY,GAArB,GAA2BH,MAAM,GAAG,IAApC,GAA2C,EAA3C;AACH,GAFD;;AAGA,MAAGA,MAAH,EAAU;AACNX,IAAAA,UAAU,CAACe,OAAX,CAAmB,cAAnB,EAAmC,IAAnC,EAAyC;AACrCC,MAAAA,iBAAiB,EAAC,IADmB;AAErCC,MAAAA,gBAAgB,EAAC,IAFoB;AAGrCC,MAAAA,IAAI,EAAC;AAHgC,KAAzC,EAIGC,IAJH,CAIQ,YAAM,CAAE,CAJhB,EAIkBC,KAJlB,CAIwB,YAAM,CAAE,CAJhC;AAKA,WAAO,KAAP;AACH,GAPD,MAOK;AACDrB,IAAAA,KAAK,CAACW,QAAN,CAAe,aAAf,EAA8BR,QAA9B;AACA,QAAMmB,IAAI,GAAGtB,KAAK,CAACK,OAAN,CAAcD,QAA3B;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeY,IAAf,CAAjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,WAAO,IAAP;AACH;AACJ;;AAED,eAAetB,MAAf","sourcesContent":["/** \n*\n*  @author: Mr_Wei \n*  @version: 1.0.0 \n*  @description: 添加歌曲方法\n*  @Date: 2019/10/20 08:58\n*\n*/ \nimport store from \"@/store\"\nimport { MessageBox } from 'element-ui';\n\nfunction isExit(songInfo){\n    const songList = store.getters.songList;\n    if(songList.length == 0){\n        localStorage.setItem(\"currentSong\", JSON.stringify(songInfo));\n        localStorage.setItem(\"play\", 1);\n        store.dispatch(\"setCurrentSong\", songInfo)\n    }\n    let isexit = false;\n    songList.forEach(item => {\n        item._id == songInfo._id ? isexit = true : \"\";\n    })\n    if(isexit){\n        MessageBox.confirm(\"歌曲已添加,请勿重复添加\", \"提示\", {\n            confirmButtonText:\"确定\",\n            cancelButtonText:\"取消\",\n            type:\"warning\"\n        }).then(() => {}).catch(() => {})\n        return false;\n    }else{\n        store.dispatch(\"setSongList\", songInfo);\n        const list = store.getters.songList;\n        localStorage.setItem(\"songList\", JSON.stringify(list));\n        console.log(\"已添加\");\n        return true;\n    }\n}\n\nexport default isExit\n"]}]}