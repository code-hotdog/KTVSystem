{"remainingRequest":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\src\\App.vue","mtime":1585972675000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n\nimport hasLogin from \"@/config/isLogin\"\nimport hasBad from \"@/config/isBadAccount\"\nimport jwt_decode from \"jwt-decode\";\nexport default {\n  name:\"App\",\n  components:{\n    // Home\n  },\n  data(){\n    return{\n      \n    }\n  },\n  created(){\n      this.isLogin();\n  },\n  methods:{\n    isLogin(){\n        if(hasLogin()){\n            const decode = jwt_decode(localStorage.userToken);\n            this.$store.dispatch(\"setAuthorizated\", true);\n            this.$store.dispatch(\"setUser\", decode);\n\n            if(localStorage.songList){\n                const list = JSON.parse(localStorage.songList);\n                this.$store.dispatch(\"setAllSong\", list);\n            }else{\n                localStorage.setItem(\"songList\", JSON.stringify([]));\n            }\n            if(!localStorage.playModle){\n                localStorage.setItem(\"playModle\", 1);\n            }\n            if(!localStorage.currentSong){\n                localStorage.setItem(\"currentSong\", JSON.stringify([]));\n            }\n            if(!localStorage.play){\n                localStorage.setItem(\"play\", 0);\n            }\n            console.log(\"已登录\")\n        }\n        setInterval(() => {\n            if(hasLogin()){\n                hasBad();\n            }else{\n                this.$store.dispatch(\"clearState\");\n            }\n        }, 2000)\n    }\n  }\n\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n      <router-view/>\n  </div>\n</template>\n<script>\nimport hasLogin from \"@/config/isLogin\"\nimport hasBad from \"@/config/isBadAccount\"\nimport jwt_decode from \"jwt-decode\";\nexport default {\n  name:\"App\",\n  components:{\n    // Home\n  },\n  data(){\n    return{\n      \n    }\n  },\n  created(){\n      this.isLogin();\n  },\n  methods:{\n    isLogin(){\n        if(hasLogin()){\n            const decode = jwt_decode(localStorage.userToken);\n            this.$store.dispatch(\"setAuthorizated\", true);\n            this.$store.dispatch(\"setUser\", decode);\n\n            if(localStorage.songList){\n                const list = JSON.parse(localStorage.songList);\n                this.$store.dispatch(\"setAllSong\", list);\n            }else{\n                localStorage.setItem(\"songList\", JSON.stringify([]));\n            }\n            if(!localStorage.playModle){\n                localStorage.setItem(\"playModle\", 1);\n            }\n            if(!localStorage.currentSong){\n                localStorage.setItem(\"currentSong\", JSON.stringify([]));\n            }\n            if(!localStorage.play){\n                localStorage.setItem(\"play\", 0);\n            }\n            console.log(\"已登录\")\n        }\n        setInterval(() => {\n            if(hasLogin()){\n                hasBad();\n            }else{\n                this.$store.dispatch(\"clearState\");\n            }\n        }, 2000)\n    }\n  }\n\n}\n</script>\n<style lang=\"less\" scoped>\n#app{\n  font-family: \"Helvetica Neue\",Helvetica,\"PingFang SC\",\"Hiragino Sans GB\",\"Microsoft YaHei\",\"微软雅黑\",Arial,sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  width: 100vw;\n  height: 100vh;\n}\n\n\n/* 滚动槽 */\n  // 谷歌\n  ::-webkit-scrollbar {\n      width: 6px;\n      height: 6px;\n  }\n  ::-webkit-scrollbar-track {\n      border-radius: 3px;\n      background: rgba(0,0,0,0.06);\n      -webkit-box-shadow: inset 0 0 3px rgba(0,0,0,0.08);\n  }\n  /* 滚动条滑块 */\n  ::-webkit-scrollbar-thumb {\n      border-radius: 3px;\n      background: rgba(236, 233, 233, 0.1);\n      -webkit-box-shadow: inset 0 0 10px rgba(0,0,0,0.2);\n  }\n\n</style>\n"]}]}