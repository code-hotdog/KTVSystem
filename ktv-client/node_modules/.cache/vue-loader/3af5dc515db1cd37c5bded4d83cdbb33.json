{"remainingRequest":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\src\\components\\bottomNav.vue?vue&type=template&id=7edb21d0&scoped=true&","dependencies":[{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\src\\components\\bottomNav.vue","mtime":1585972675000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"topNav\" },\n    [\n      _c(\"div\", { staticClass: \"container\" }),\n      _c(\"div\", { staticClass: \"inner-box\" }, [\n        _c(\"div\", { staticClass: \"left\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"home\", on: { click: _vm.goHome } },\n            [\n              _c(\"Icon\", { attrs: { type: \"ios-home\" } }),\n              _c(\"div\", [_vm._v(\"首页\")])\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"selected\", on: { click: _vm.selected } },\n            [\n              _c(\"Icon\", { attrs: { type: \"ios-musical-notes\" } }),\n              _c(\"div\", [_vm._v(\"已选\")])\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"addvolume\", on: { click: _vm.addvolume } },\n            [\n              _c(\"Icon\", { attrs: { type: \"ios-volume-up\" } }),\n              _c(\"div\", [_vm._v(\"音量+\")])\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"reducevolume\", on: { click: _vm.reducevolume } },\n            [\n              _c(\"Icon\", { attrs: { type: \"ios-volume-mute\" } }),\n              _c(\"div\", [_vm._v(\"音量-\")])\n            ],\n            1\n          )\n        ]),\n        _c(\"div\", { staticClass: \"middle\" }, [\n          _c(\"img\", { attrs: { src: _vm.currentPoster, alt: \"\" } }),\n          _c(\"div\", { staticClass: \"control-btn\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"prev-btn\", on: { click: _vm.playPrev } },\n              [_c(\"Icon\", { attrs: { type: \"ios-rewind\" } })],\n              1\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"play\", on: { click: _vm.playOrpause } },\n              [\n                _c(\"Icon\", { attrs: { type: \"ios-play\", id: \"ios-play\" } }),\n                _c(\"Icon\", { attrs: { type: \"ios-pause\", id: \"ios-pause\" } })\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"next-btn\", on: { click: _vm.playNext } },\n              [_c(\"Icon\", { attrs: { type: \"ios-fastforward\" } })],\n              1\n            )\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"right\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"minormax\", on: { click: _vm.minOrmax } },\n            [\n              _c(\"Icon\", { attrs: { type: \"md-volume-off\" } }),\n              _c(\"div\", [_vm._v(\"静音\")])\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"single-cycle\", on: { click: _vm.singleCycle } },\n            [\n              _c(\"Icon\", { attrs: { type: \"md-sync\" } }),\n              _c(\"div\", [_vm._v(\"单曲\")])\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"order-cycle\", on: { click: _vm.orderCycle } },\n            [\n              _c(\"Icon\", { attrs: { type: \"md-swap\" } }),\n              _c(\"div\", [_vm._v(\"顺序\")])\n            ],\n            1\n          ),\n          _c(\"div\", { staticClass: \"login\" }, [\n            !_vm.isLogin\n              ? _c(\n                  \"span\",\n                  {\n                    on: {\n                      click: function($event) {\n                        _vm.loginModal = true\n                      }\n                    }\n                  },\n                  [\n                    _c(\"Icon\", { attrs: { type: \"md-log-in\" } }),\n                    _c(\"div\", [_vm._v(\"登录\")])\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _vm.isLogin\n              ? _c(\n                  \"span\",\n                  { on: { click: _vm.logout } },\n                  [\n                    _c(\"Icon\", { attrs: { type: \"md-log-out\" } }),\n                    _c(\"div\", [_vm._v(\"下机\")])\n                  ],\n                  1\n                )\n              : _vm._e()\n          ])\n        ])\n      ]),\n      _c(\n        \"Modal\",\n        {\n          attrs: { width: \"450\" },\n          model: {\n            value: _vm.loginModal,\n            callback: function($$v) {\n              _vm.loginModal = $$v\n            },\n            expression: \"loginModal\"\n          }\n        },\n        [\n          _c(\n            \"p\",\n            {\n              staticStyle: { color: \"#f60\", \"text-align\": \"center\" },\n              attrs: { slot: \"header\" },\n              slot: \"header\"\n            },\n            [\n              _c(\"Icon\", { attrs: { type: \"logo-pinterest\" } }),\n              _c(\"span\", [_vm._v(\" 请登录\")])\n            ],\n            1\n          ),\n          _vm.loginModal\n            ? _c(\"div\", [\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"ranklistbox\",\n                    staticStyle: { width: \"100%\", padding: \"0px 2px\" }\n                  },\n                  [\n                    _c(\n                      \"el-form\",\n                      {\n                        ref: \"ruleForm\",\n                        attrs: {\n                          model: _vm.ruleForm,\n                          \"status-icon\": \"\",\n                          rules: _vm.rules,\n                          \"label-width\": \"55px\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"账号:\", prop: \"account\" } },\n                          [\n                            _c(\"el-input\", {\n                              attrs: { type: \"account\" },\n                              model: {\n                                value: _vm.ruleForm.account,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.ruleForm, \"account\", $$v)\n                                },\n                                expression: \"ruleForm.account\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"密码:\", prop: \"password\" } },\n                          [\n                            _c(\"el-input\", {\n                              attrs: { type: \"password\" },\n                              nativeOn: {\n                                keypress: function($event) {\n                                  if (\n                                    !$event.type.indexOf(\"key\") &&\n                                    _vm._k(\n                                      $event.keyCode,\n                                      \"enter\",\n                                      13,\n                                      $event.key,\n                                      \"Enter\"\n                                    )\n                                  ) {\n                                    return null\n                                  }\n                                  return _vm.submit(\"ruleForm\")\n                                }\n                              },\n                              model: {\n                                value: _vm.ruleForm.password,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.ruleForm, \"password\", $$v)\n                                },\n                                expression: \"ruleForm.password\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ])\n            : _vm._e(),\n          _vm.loginModal\n            ? _c(\n                \"div\",\n                { attrs: { slot: \"footer\" }, slot: \"footer\" },\n                [\n                  _c(\n                    \"Row\",\n                    [\n                      _c(\n                        \"Button\",\n                        {\n                          attrs: { type: \"success\", long: \"\" },\n                          on: {\n                            click: function($event) {\n                              return _vm.submit(\"ruleForm\")\n                            }\n                          }\n                        },\n                        [_vm._v(\"登录\")]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            : _vm._e()\n        ]\n      ),\n      _c(\"audio\", {\n        ref: \"musicPlayer\",\n        attrs: {\n          autoplay: \"\",\n          id: \"musicPlayer\",\n          src:\n            \"http://localhost:8633/api/music/nowmusic?id=\" +\n            _vm.currentSong._id,\n          preload: \"auto\"\n        },\n        on: { ended: _vm.end }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}