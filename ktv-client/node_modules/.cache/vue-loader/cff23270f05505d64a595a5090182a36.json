{"remainingRequest":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\src\\views\\abc.vue?vue&type=template&id=0f9bf538&scoped=true&","dependencies":[{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\src\\views\\abc.vue","mtime":1585972675000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"ktvlikes\" },\n    [\n      _c(\n        \"Row\",\n        { staticClass: \"search-box\" },\n        [\n          _c(\n            \"Col\",\n            { attrs: { span: 20 } },\n            [\n              _c(\"Input\", {\n                staticStyle: { width: \"300px\" },\n                attrs: {\n                  placeholder: \"搜索歌曲(按歌名或歌手搜索)...\",\n                  clearable: \"\"\n                },\n                nativeOn: {\n                  keypress: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.fetchSongs($event)\n                  }\n                },\n                model: {\n                  value: _vm.searchSong,\n                  callback: function($$v) {\n                    _vm.searchSong = $$v\n                  },\n                  expression: \"searchSong\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"Col\",\n            { attrs: { span: 4 } },\n            [\n              _c(\"Icon\", {\n                staticStyle: { \"font-size\": \"35px\", cursor: \"pointer\" },\n                attrs: { type: \"md-refresh\" },\n                on: { click: _vm.getAllSongs }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"wrapper\" },\n        [\n          _c(\n            \"Row\",\n            {\n              staticStyle: {\n                padding: \"20px 150px\",\n                color: \"#fff\",\n                \"font-size\": \"18px\",\n                \"font-weight\": \"700\"\n              }\n            },\n            [\n              _c(\n                \"Col\",\n                { staticStyle: { cursor: \"default\" }, attrs: { span: 3 } },\n                [_vm._v(\"\\n                封面\\n            \")]\n              ),\n              _c(\n                \"Col\",\n                {\n                  staticStyle: { cursor: \"default\", \"padding-right\": \"20px\" },\n                  attrs: { span: 6 }\n                },\n                [_vm._v(\"\\n                歌曲\\n            \")]\n              ),\n              _c(\n                \"Col\",\n                { staticStyle: { cursor: \"default\" }, attrs: { span: 6 } },\n                [_vm._v(\"\\n                歌手\\n            \")]\n              ),\n              _c(\n                \"Col\",\n                { staticStyle: { cursor: \"default\" }, attrs: { span: 4 } },\n                [_vm._v(\"\\n                点播次数\\n            \")]\n              ),\n              _c(\n                \"Col\",\n                {\n                  staticStyle: { \"text-align\": \"center\", cursor: \"pointer\" },\n                  attrs: { span: 3 }\n                },\n                [_vm._v(\"\\n                播放列表\\n            \")]\n              )\n            ],\n            1\n          ),\n          _vm._l(_vm.allSongs, function(item, index) {\n            return _c(\n              \"Row\",\n              {\n                key: index,\n                staticClass: \"row-song\",\n                staticStyle: { padding: \"20px 150px\" }\n              },\n              [\n                _c(\n                  \"Col\",\n                  { staticStyle: { cursor: \"default\" }, attrs: { span: 3 } },\n                  [\n                    _c(\"Avatar\", {\n                      attrs: {\n                        src:\n                          \"http://localhost:8633/api/music/poster?img=\" +\n                          item.poster\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"Col\",\n                  {\n                    staticStyle: { cursor: \"default\", \"padding-right\": \"20px\" },\n                    attrs: { span: 6 }\n                  },\n                  [\n                    _vm._v(\n                      \"\\n                \" +\n                        _vm._s(item.songName) +\n                        \"\\n            \"\n                    )\n                  ]\n                ),\n                _c(\n                  \"Col\",\n                  { staticStyle: { cursor: \"default\" }, attrs: { span: 6 } },\n                  [\n                    _vm._v(\n                      \"\\n                \" +\n                        _vm._s(item.artist) +\n                        \"\\n            \"\n                    )\n                  ]\n                ),\n                _c(\n                  \"Col\",\n                  { staticStyle: { cursor: \"default\" }, attrs: { span: 4 } },\n                  [\n                    _vm._v(\n                      \"\\n                被点\" +\n                        _vm._s(item.playcount) +\n                        \"次\\n            \"\n                    )\n                  ]\n                ),\n                _c(\n                  \"Col\",\n                  {\n                    staticStyle: { \"text-align\": \"center\", cursor: \"pointer\" },\n                    attrs: { span: 3 },\n                    nativeOn: {\n                      click: function($event) {\n                        return _vm.addSong(item)\n                      }\n                    }\n                  },\n                  [_vm._v(\"\\n                添加\\n            \")]\n                )\n              ],\n              1\n            )\n          }),\n          _c(\n            \"Row\",\n            [\n              _c(\n                \"Col\",\n                {\n                  staticStyle: { \"text-align\": \"right\", padding: \"10px\" },\n                  attrs: { span: \"24\" }\n                },\n                [\n                  _vm.paginations.total > 0\n                    ? _c(\"el-pagination\", {\n                        attrs: {\n                          \"page-sizes\": _vm.paginations.page_sizes,\n                          \"page-size\": _vm.paginations.page_size,\n                          layout: _vm.paginations.layout,\n                          total: _vm.paginations.total,\n                          \"current-page\": _vm.paginations.page_index\n                        },\n                        on: {\n                          \"update:currentPage\": function($event) {\n                            return _vm.$set(\n                              _vm.paginations,\n                              \"page_index\",\n                              $event\n                            )\n                          },\n                          \"update:current-page\": function($event) {\n                            return _vm.$set(\n                              _vm.paginations,\n                              \"page_index\",\n                              $event\n                            )\n                          },\n                          \"current-change\": _vm.handleCurrentChange,\n                          \"size-change\": _vm.handleSizeChange\n                        }\n                      })\n                    : _vm._e()\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        2\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}