{"remainingRequest":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\src\\views\\managemusic.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\src\\views\\managemusic.vue","mtime":1585972675000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:\\\\\\u7814\\u8BFE\\u7A0B\\\\ktv-select_music-system-master\\\\ktv-select_music-system-master\\\\ktv-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport wsmLoading from \"@/plugins/wsmLoading\";\nimport $ from \"jquery\";\nexport default {\n  name: \"managemusic\",\n  data: function data() {\n    return {\n      isfirst: false,\n      firstEdit: true,\n      isCheckPassword: false,\n      inputPassword: \"\",\n      searchName: \"\",\n      flag: \"\",\n      // 用来判断是 添加, 编辑或删除\n      noChangeSongs: [],\n      toListen: false,\n      toListenSrc: \"\",\n      toListenPoster: \"\",\n      allSongs: [],\n      allTableData: [],\n      paginations: {\n        // 分页属性\n        page_index: 1,\n        // 当前位于哪页\n        total: 0,\n        // 总数\n        page_size: 8,\n        // 1页显示多少条\n        page_sizes: [8, 15, 20, 25],\n        //每页显示多少条\n        layout: \"total, sizes, prev, pager, next, jumper\" // 翻页属性\n\n      },\n      delRow: \"\",\n      editDialog: {\n        title: \"编辑歌曲\",\n        show: false\n      },\n      editForm: {\n        // 编辑歌曲的form\n        _id: \"\",\n        songName: \"\",\n        src: \"\",\n        artist: \"\",\n        poster: \"\",\n        language: \"\",\n        style: \"\"\n      },\n      addDialog: {\n        title: \"添加歌曲\",\n        show: false\n      },\n      addForm: {\n        songName: \"\",\n        artist: \"\",\n        src: \"\",\n        poster: \"\",\n        language: \"\",\n        style: \"\"\n      },\n      addForm_rules: {\n        // 添加或者编辑歌曲规则 \n        songName: [{\n          required: true,\n          message: \"歌曲名不能为空\"\n        }],\n        artist: [{\n          required: true,\n          message: \"歌手不能为空\"\n        }],\n        src: [{\n          required: true,\n          message: \"歌曲不能为空\"\n        }],\n        poster: [{\n          required: true,\n          message: \"歌曲封面不能为空\"\n        }]\n      },\n      // 语种\n      Languages: [\"汉语\", \"韩语\", \"日语\", \"英语\", \"粤语\"],\n      SongStyle: [\"传统\", \"民歌\", \"摇滚\", \"伴奏\", \"古风\"] // 歌曲风格\n\n    };\n  },\n  created: function created() {\n    this.getAllSong();\n  },\n  methods: {\n    // 验证密码\n    checkPwd: function checkPwd() {\n      var _this = this;\n\n      if (this.inputPassword.trim().length) {\n        this.isCheckPassword = false;\n        wsmLoading.start(\"正在验证密码,请稍候...\");\n        setTimeout(function () {\n          _this.$axios.post(\"http://localhost:8633/api/admin/islegal\", {\n            password: _this.inputPassword,\n            email: _this.$store.getters.adminInfo.email\n          }).then(function (res) {\n            console.log(res);\n\n            if (res.data == true) {\n              if (_this.flag == 1) {\n                // 添加歌曲\n                wsmLoading.start(\"密码正确, 正在添加歌曲\");\n\n                _this.$axios.post(\"http://localhost:8633/api/admin/music/add\", _this.addForm).then(function (res) {\n                  _this.getAllSong();\n\n                  _this.$nextTick(function () {\n                    // 以服务的方式调用的 Loading 需要异步关闭\n                    wsmLoading.end();\n                    _this.inputPassword = \"\";\n\n                    _this.$Message.success(\"添加成功\");\n                  });\n                });\n              } else if (_this.flag == 2) {\n                // 编辑歌曲\n                wsmLoading.start(\"密码正确, 正在编辑歌曲歌曲\");\n\n                _this.$axios.post(\"http://localhost:8633/api/admin/music/edit\", _this.editForm).then(function (res) {\n                  console.log(res.data);\n\n                  _this.getAllSong();\n\n                  _this.$nextTick(function () {\n                    // 以服务的方式调用的 Loading 需要异步关闭\n                    wsmLoading.end();\n                    _this.inputPassword = \"\";\n\n                    _this.$Message.success(\"更新成功\");\n                  });\n                });\n              } else if (_this.flag == 3) {\n                // 删除歌曲\n                wsmLoading.start(\"密码正确, 正在删除歌曲..\");\n\n                _this.$axios.post(\"http://localhost:8633/api/admin/music/delete\", _this.delRow).then(function (res) {\n                  console.log(res.data);\n\n                  _this.getAllSong();\n\n                  _this.$nextTick(function () {\n                    wsmLoading.end();\n                    _this.inputPassword = \"\";\n\n                    _this.$Message.success(\"删除成功\");\n                  });\n                });\n              }\n            }\n          }).catch(function (err) {\n            return _this.inputPassword = \"\";\n          });\n        }, 300);\n      } else {\n        this.isCheckPassword = false;\n        this.$Modal.warning({\n          title: \"提示\",\n          content: \"密码不能为空,请输入管理员口令...\",\n          onOk: function onOk() {\n            _this.isCheckPassword = true;\n          }\n        });\n      }\n    },\n    // 管理员收藏歌曲\n    likeSongs: function likeSongs(song) {\n      var _this2 = this;\n\n      console.log(song);\n      this.$confirm(\"\\u8981\\u6DFB\\u52A0 \".concat(song.songName, \" (\").concat(song.artist, \") \\u6B4C\\u66F2\\u5230KTV\\u63A8\\u8350\\u6B4C\\u66F2\\u91CC\\u5417? \"), '操作提示', {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this2.$axios.post(\"http://localhost:8633/api/admin/adminlike/add\", {\n          s_id: song._id\n        }).then(function (res) {\n          _this2.$Message.success(\"收藏成功\");\n        }).catch(function (err) {\n          return console.error(err);\n        });\n      }).catch(function () {});\n    },\n    // 删除歌曲\n    onDeleteSong: function onDeleteSong(song) {\n      var _this3 = this;\n\n      this.$confirm(\"\\u786E\\u5B9A\\u5220\\u9664 \".concat(song.songName, \" (\").concat(song.artist, \") \\u6B4C\\u66F2\\u5417?\\u4E0D\\u53EF\\u64A4\\u9500,\\u662F\\u5426\\u7EE7\\u7EED? \"), '风险提示', {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this3.isCheckPassword = true;\n        _this3.flag = 3;\n        _this3.delRow = song;\n      }).catch(function () {});\n    },\n    okEditBtn: function okEditBtn(formName) {\n      var _this4 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this4.isCheckPassword = true;\n          _this4.editDialog.show = false;\n          _this4.flag = 2;\n        } // 不合法\n\n      });\n    },\n    // 编辑歌曲\n    onEditSong: function onEditSong(song) {\n      console.log(song);\n      this.editForm = _objectSpread({}, song);\n      this.editDialog.show = true;\n      this.clearFiles();\n    },\n    // 成功上传歌曲\n    handleEditSongSuccess: function handleEditSongSuccess(res) {\n      console.log(res);\n      this.editForm.src = res.result.src;\n      this.firstEdit = false;\n    },\n    // 成功上传图片\n    handleEditPosterSuccess: function handleEditPosterSuccess(res) {\n      console.log(res);\n      this.editForm.poster = res.result.poster;\n      console.log(this.editForm);\n    },\n    // 搜索歌曲\n    searchSong: function searchSong() {\n      var _this5 = this;\n\n      if (this.searchName.trim().length) {\n        this.$axios.post(\"http://localhost:8633/api/music/search/byname\", {\n          searchName: this.searchName\n        }).then(function (res) {\n          _this5.allSongs = res.data;\n          _this5.allTableData = res.data;\n\n          _this5.setPaginations();\n        });\n      } else {\n        this.$Message.warning(\"搜索内容不能为空..\");\n      }\n    },\n    // 添加音乐\n    addSong: function addSong(formName) {\n      var _this6 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this6.isCheckPassword = true;\n          _this6.addDialog.show = false;\n          _this6.flag = 1;\n        } // 不合法\n\n      });\n    },\n    // 显示添加音乐模态框\n    showAddSongBtn: function showAddSongBtn() {\n      this.addDialog.show = true;\n      this.addForm.songName = \"\";\n      this.addForm.artist = \"\";\n      this.addForm.src = \"\";\n      this.addForm.poster = \"\";\n      this.addForm.language = \"\";\n      this.addForm.style = \"\";\n      this.addForm.playcount = \"\";\n      this.addForm.date = \"\";\n      this.clearFiles();\n    },\n    // 成功添加歌曲回调\n    handleAddSongSuccess: function handleAddSongSuccess(res) {\n      console.log(res);\n      this.addForm.src = res.result.src;\n    },\n    // 成功添加歌曲海报回调\n    handleAddPosterSuccess: function handleAddPosterSuccess(res) {\n      this.isfirst = true;\n      console.log(res);\n      this.addForm.poster = res.result.poster;\n    },\n    clearFiles: function clearFiles() {\n      if (this.firstEdit == false) {\n        this.$refs.editmusic.clearFiles();\n      }\n\n      if (this.isfirst == true) {\n        this.$refs.uploadmusic.clearFiles();\n      }\n    },\n    listenMusic: function listenMusic(song) {\n      var _this7 = this;\n\n      this.toListenSrc = \"http://localhost:8633/api/music/nowmusic?id=\".concat(song._id);\n      this.toListenPoster = \"http://localhost:8633/api/music/poster?img=\".concat(song.poster);\n      setTimeout(function () {\n        console.log(_this7.$refs.musicPlayer.duration);\n      }, 200);\n    },\n    // 操作音乐\n    operaMusic: function operaMusic() {\n      if (this.$refs.musicPlayer.paused) {\n        $(\".listen-poster\").css(\"animation-play-state\", \"running\");\n        this.$refs.musicPlayer.play();\n      } else {\n        $(\".listen-poster\").css(\"animation-play-state\", \"paused\");\n        this.$refs.musicPlayer.pause();\n      }\n    },\n    ended: function ended() {\n      this.$refs.musicPlayer.play();\n    },\n    // 获取所有歌曲\n    getAllSong: function getAllSong() {\n      var _this8 = this;\n\n      this.$axios.get(\"http://localhost:8633/api/music/all\").then(function (res) {\n        if (res.data.length) {\n          _this8.allSongs = res.data;\n          _this8.noChangeSongs = res.data;\n          _this8.allTableData = res.data;\n\n          _this8.setPaginations();\n        } else {\n          console.error(res);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    // 设置当前页\n    handleCurrentChange: function handleCurrentChange(page) {\n      var _this9 = this;\n\n      // 获取当前页\n      var sortnum = this.paginations.page_size * (page - 1);\n      var table = this.allTableData.filter(function (item, index) {\n        return index >= sortnum;\n      }); // 设置默认分页数据\n\n      this.allSongs = table.filter(function (item, index) {\n        return index < _this9.paginations.page_size;\n      });\n      this.allSongs = table.filter(function (item, index) {\n        return index < _this9.paginations.page_size;\n      });\n    },\n    // 改变每页条数\n    handleSizeChange: function handleSizeChange(page_size) {\n      // 切换size\n      this.paginations.page_index = 1;\n      this.paginations.page_size = page_size;\n      this.allSongs = this.allTableData.filter(function (item, index) {\n        return index < page_size;\n      });\n    },\n    // 设置的分页\n    setPaginations: function setPaginations() {\n      var _this10 = this;\n\n      // 总页数\n      this.paginations.total = this.allTableData.length;\n      this.paginations.page_index = 1;\n      this.paginations.page_size = 8; // 设置默认分页数据\n\n      this.allSongs = this.allTableData.filter(function (item, index) {\n        return index < _this10.paginations.page_size;\n      });\n    }\n  }\n};",{"version":3,"sources":["managemusic.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"managemusic\">\n        <audio ref=\"musicPlayer\" :src=\"toListenSrc\" @ended=\"ended\" autoplay preload=\"load\"></audio>\n        <Row style=\"padding:20px 60px 20px 40px;\">\n            <Col :span=\"5\">\n                <Input prefix=\"ios-musical-notes\" clearable v-model=\"searchName\" @keypress.enter.native=\"searchSong()\" placeholder=\"按 歌名, 歌手 搜索歌曲...\" style=\"width: auto\" />\n            </Col>\n            <Col :span=\"3\">\n                <Button type=\"primary\" style=\"margin-left:5px;\" @click=\"getAllSong()\">所有歌曲</Button>\n            </Col>\n            <Col :span=\"4\">\n                <Button type=\"success\" style=\"margin-left:5px;\" @click=\"toListen = true\">试听歌曲</Button>\n            </Col>\n            <Col :span=\"12\" style=\"text-align:right;\">\n                <Avatar id=\"musicPoster\" @click.native=\"operaMusic\" class=\"listen-poster\" v-if=\"toListenPoster\" :src=\"toListenPoster\" size=\"large\" style=\"margin-right:40px;\" />\n                <Button type=\"primary\" @click=\"showAddSongBtn()\">添加</Button>\n            </Col>\n        </Row>\n        <!-- 歌曲数据表 -->\n        <div style=\"width:100%;background-color:#f40;\">\n            <el-table\n                :data=\"allSongs\"\n                class=\"song-table\"\n                style=\"width: 100%\"\n                border\n            >\n                <el-table-column\n                    type=\"index\"\n                    label=\"序号\"\n                    align=\"center\"\n                    width=\"60\">\n                </el-table-column>\n                <el-table-column\n                    prop=\"_id\"\n                    label=\"歌曲 ID\"\n                    align=\"center\"\n                    width=\"240\">\n                </el-table-column>\n                <el-table-column\n                    label=\"歌曲名\"\n                    prop=\"songName\"\n                    align=\"center\"\n                    width=\"200\">\n                </el-table-column>\n                <el-table-column\n                    prop=\"artist\"\n                    label=\"歌手\"\n                    align=\"center\"\n                    width=\"170\">\n                </el-table-column>\n                <el-table-column\n                    prop=\"src\"\n                    align=\"center\"\n                    width=\"200\"\n                    label=\"歌曲地址\">\n                </el-table-column>\n                <el-table-column\n                    align=\"center\"\n                    width=\"120\"\n                    label=\"歌曲封面\">\n                    <template slot-scope='scope'>\n                        <Avatar :src=\"'http://localhost:8633/api/music/poster?img=' + scope.row.poster\" size=\"large\" />\n                    </template>\n                </el-table-column>\n                <el-table-column\n                    align=\"center\"\n                    prop=\"language\"\n                    width=\"120\"\n                    label=\"语种\">\n                </el-table-column>\n                <el-table-column\n                    align=\"center\"\n                    prop=\"style\"\n                    width=\"120\"\n                    label=\"风格\">\n                </el-table-column>\n                <el-table-column\n                    align=\"center\"\n                    prop=\"playcount\"\n                    width=\"80\"\n                    label=\"播放次数\">\n                </el-table-column>\n                <el-table-column\n                    align=\"center\"\n                    prop=\"date\"\n                    width=\"200\"\n                    label=\"最近更新时间\">\n                </el-table-column>\n                <el-table-column\n                    prop=\"operation\"\n                    align='center'\n                    label=\"操作\"\n                    fixed=\"right\"\n                    min-width=\"150\">\n                    <template slot-scope='scope'>\n                        <el-button \n                            type=\"warning\"\n                            size=\"small\"\n                            circle\n                            icon=\"el-icon-star-off\"\n                            @click='likeSongs(scope.row)'\n                        ></el-button>\n                        <el-button \n                            type=\"primary\" \n                            icon=\"el-icon-edit\" \n                            size=\"small\"\n                            circle\n                            @click='onEditSong(scope.row)'\n                        ></el-button>\n                        <el-button \n                            type=\"danger\" \n                            icon='el-icon-delete' \n                            size=\"small\"\n                            circle\n                            @click='onDeleteSong(scope.row,scope.$index)'\n                        ></el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n        </div>\n        <!-- 分页 -->\n        <Row>\n            <Col span=\"24\" style=\"text-align:right;padding:10px;\">\n                <el-pagination\n                    v-if='paginations.total > 0'\n                    :page-sizes=\"paginations.page_sizes\"\n                    :page-size=\"paginations.page_size\"\n                    :layout=\"paginations.layout\"\n                    :total=\"paginations.total\"\n                    :current-page.sync='paginations.page_index'\n                    @current-change='handleCurrentChange'\n                    @size-change='handleSizeChange'>\n                </el-pagination>\n            </Col>\n        </Row>\n\n        <!-- 添加歌曲 -->\n        <el-dialog \n            :title=\"addDialog.title\" \n            :visible.sync=\"addDialog.show\"\n            :close-on-click-modal='false'\n            :close-on-press-escape='false'\n            :modal-append-to-body=\"false\">\n            <div class=\"form\">\n                <el-form \n                    ref=\"addForm\" \n                    :model=\"addForm\"\n                    :rules=\"addForm_rules\"\n                    label-width=\"120px\" \n                    style=\"margin:10px;width:auto;\">\n                    <el-form-item prop='songName' label=\"歌曲名:\">\n                        <el-input type=\"songName\" v-model=\"addForm.songName\"></el-input>\n                    </el-form-item>\n                    <el-form-item prop='artist'  label=\"歌手:\">\n                        <el-input type=\"artist\" v-model=\"addForm.artist\"></el-input>\n                    </el-form-item>\n                    <el-form-item prop='src' label=\"歌曲地址:\">\n                        <Upload action=\"http://localhost:8633/api/admin/upload/music\"\n                            :on-success=\"handleAddSongSuccess\"\n                            ref=\"uploadmusic\"\n                            :format=\"['mp3']\">\n                            <Button icon=\"ios-cloud-upload-outline\" @click.native=\"clearFiles\">上传歌曲</Button>\n                        </Upload>\n                    </el-form-item>\n                    <el-form-item label=\"歌曲封面:\" prop=\"poster\">\n                        <Upload\n                            :show-upload-list=\"false\"\n                            :format=\"['jpg','png']\"\n                            :max-size=\"10000\"\n                            multiple\n                            type=\"drag\"\n                            :on-success=\"handleAddPosterSuccess\"\n                            action=\"http://localhost:8633/api/admin/upload/poster\"\n                            style=\"display:block;width:44px;\">\n                            <span style=\"float:left;\">\n                                <Avatar :src=\"'http://localhost:8633/api/music/poster?img=' + addForm.poster\" size=\"large\" />\n                            </span>\n                        </Upload>\n                    </el-form-item>\n                    <el-form-item prop='language'  label=\"语种:\">\n                        <Select v-model=\"addForm.language\" clearable style=\"width:200px\">\n                            <Option v-for=\"item in Languages\" :value=\"item\" :key=\"item\">{{ item }}</Option>\n                        </Select>\n                    </el-form-item>\n                    <el-form-item prop='style'  label=\"风格:\">\n                        <Select v-model=\"addForm.style\" clearable style=\"width:200px\">\n                            <Option v-for=\"item in SongStyle\" :value=\"item\" :key=\"item\">{{ item }}</Option>\n                        </Select>\n                    </el-form-item>\n                    <el-form-item  class=\"text_right\">\n                        <el-button @click=\"addDialog.show = false\">取 消</el-button>\n                        <el-button type=\"primary\" @click='addSong(\"addForm\")'>提  交</el-button>\n                    </el-form-item>\n                </el-form>\n            </div>\n        </el-dialog>\n\n        <!-- 编辑歌曲 -->\n        <el-dialog \n            :title=\"editDialog.title\" \n            :visible.sync=\"editDialog.show\"\n            :close-on-click-modal='false'\n            :close-on-press-escape='false'\n            :modal-append-to-body=\"false\">\n            <div class=\"form\">\n                <el-form \n                    ref=\"editForm\" \n                    :model=\"editForm\"\n                    :rules=\"addForm_rules\"\n                    label-width=\"120px\" \n                    style=\"margin:10px;width:auto;\">\n                    <el-form-item prop='_id' label=\"歌曲ID:\">\n                        <el-input type=\"id\" disabled v-model=\"editForm._id\"></el-input>\n                    </el-form-item>\n                    <el-form-item prop='songName' label=\"歌曲:\">\n                        <el-input type=\"songName\" v-model=\"editForm.songName\"></el-input>\n                    </el-form-item>\n                    <el-form-item prop='artist'  label=\"歌手:\">\n                        <el-input type=\"artist\" v-model=\"editForm.artist\"></el-input>\n                    </el-form-item>\n                    <el-form-item prop='src' label=\"歌曲地址:\">\n                        <Upload action=\"http://localhost:8633/api/admin/upload/music\"\n                            :on-success=\"handleEditSongSuccess\"\n                            ref=\"editmusic\"\n                            :format=\"['mp3']\">\n                            <Button icon=\"ios-cloud-upload-outline\">重新选择</Button>\n                        </Upload>\n                        <!-- <el-input type=\"src\" v-model=\"form.src\"></el-input> -->\n                    </el-form-item>\n                    <el-form-item label=\"歌曲封面:\" prop=\"pic\">\n                        <Upload\n                            :show-upload-list=\"false\"\n                            :format=\"['jpg','jpeg','png']\"\n                            :max-size=\"50000\"\n                            multiple\n                            type=\"drag\"\n                            :on-success=\"handleEditPosterSuccess\"\n                            action=\"http://localhost:8633/api/admin/upload/poster\"\n                            style=\"display:block;width:44px;\">\n                            <span style=\"float:left;\">\n                                <Avatar :src=\"'http://localhost:8633/api/music/poster?img='+ editForm.poster\" size=\"large\" />\n                            </span>\n                        </Upload>\n                    </el-form-item>\n                    <el-form-item prop='language'  label=\"语种:\">\n                        <Select v-model=\"editForm.language\" clearable style=\"width:200px\">\n                            <Option v-for=\"item in Languages\" :value=\"item\" :key=\"item\">{{ item }}</Option>\n                        </Select>\n                    </el-form-item>\n                    <el-form-item prop='style'  label=\"风格:\">\n                        <Select v-model=\"editForm.style\" clearable style=\"width:200px\">\n                            <Option v-for=\"item in SongStyle\" :value=\"item\" :key=\"item\">{{ item }}</Option>\n                        </Select>\n                    </el-form-item>\n\n                    <el-form-item  class=\"text_right\">\n                        <el-button @click=\"editDialog.show = false\">取 消</el-button>\n                        <el-button type=\"primary\" @click='okEditBtn(\"editForm\")'>提  交</el-button>\n                    </el-form-item>\n\n                </el-form>\n            </div>\n        </el-dialog>\n\n        <!-- 验证密码 -->\n        <Modal draggable v-model=\"isCheckPassword\" :mask-closable=\"false\" width=\"360\">\n            <p slot=\"header\" style=\"color:#f60;\">\n                <Icon type=\"ios-information-circle\"></Icon>\n                <span>验证密码</span>\n            </p>\n            <div style=\"text-align:left;font-size:14px;\">\n                <Row>\n                    <Col span=\"18\">\n                        <Input v-model=\"inputPassword\" type=\"password\" icon=\"ios-key\" @keyup.enter.native=\"checkPwd()\"  placeholder=\"请输入管理员密码...\" style=\"width: 200px\" />\n                    </Col>\n                    <Col span=\"6\">\n                        <Button type=\"primary\" size=\"large\" @click=\"checkPwd()\">验证</Button>\n                    </Col>\n                </Row>\n            </div>\n            <div slot=\"footer\">\n            </div>\n        </Modal>\n\n        <!-- 音乐试听 -->\n        <Modal v-model=\"toListen\" width=\"700\">\n            <p slot=\"header\" style=\"color:#f60;text-align:center\">\n                <Icon type=\"ios-musical-notes\" />\n                <span> 点击试听</span>\n            </p>\n            <div v-if=\"toListen\">\n                <div style=\"width:100%;\">\n                    <el-table\n                    :data=\"allSongs\"\n                    height=\"300\"\n                    style=\"width: 100%\">\n                        <el-table-column\n                            prop=\"songName\"\n                            align=\"center\"\n                            width=\"200\"\n                            label=\"歌名\">\n                        </el-table-column>\n                        <el-table-column\n                            prop=\"artist\"\n                            align=\"center\"\n                            width=\"200\"\n                            label=\"歌手\">\n                        </el-table-column>\n                        <el-table-column\n                            align=\"center\"\n                            width=\"200\"\n                            label=\"试听\">\n                            <template slot-scope=\"scope\">\n                                <span class=\"toListen-link\" @click=\"listenMusic(scope.row)\">播放</span>\n                            </template>\n                        </el-table-column>\n                    </el-table>\n                </div>\n            </div>\n            <div slot=\"footer\" v-if=\"toListen\" style=\"height:30px;\">\n                <Col span=\"24\" style=\"text-align:right;padding:0px 10px;\">\n                    <el-pagination\n                        v-if='paginations.total > 0'\n                        :page-sizes=\"paginations.page_sizes\"\n                        :page-size=\"paginations.page_size\"\n                        :layout=\"paginations.layout\"\n                        :total=\"paginations.total\"\n                        :current-page.sync='paginations.page_index'\n                        @current-change='handleCurrentChange'\n                        @size-change='handleSizeChange'>\n                    </el-pagination>\n                </Col>\n            </div>\n        </Modal>\n    </div>\n</template>\n<script>\nimport wsmLoading from \"@/plugins/wsmLoading\"\nimport $ from \"jquery\";\nexport default {\n    name:\"managemusic\",\n    data(){\n        return{\n            isfirst:false,\n            firstEdit:true,\n            isCheckPassword:false,\n            inputPassword:\"\",\n            searchName:\"\",\n            flag:\"\",  // 用来判断是 添加, 编辑或删除\n            noChangeSongs:[],\n            toListen:false,\n            toListenSrc:\"\",\n            toListenPoster:\"\",\n            allSongs:[],\n            allTableData:[],\n            paginations: {  // 分页属性\n                page_index: 1, // 当前位于哪页\n                total: 0, // 总数\n                page_size: 8, // 1页显示多少条\n                page_sizes: [8, 15, 20, 25], //每页显示多少条\n                layout: \"total, sizes, prev, pager, next, jumper\" // 翻页属性\n            },\n            delRow:\"\",\n            editDialog:{\n                title:\"编辑歌曲\",\n                show:false\n            },\n            editForm:{   // 编辑歌曲的form\n                _id:\"\",\n                songName:\"\",\n                src:\"\",\n                artist:\"\",\n                poster:\"\",\n                language:\"\",\n                style:\"\"\n            },\n            addDialog:{\n                title:\"添加歌曲\",\n                show:false\n            },\n            addForm:{\n                songName:\"\",\n                artist:\"\",\n                src:\"\",\n                poster:\"\",\n                language:\"\",\n                style:\"\"\n            },\n            addForm_rules: {  // 添加或者编辑歌曲规则 \n                songName: [\n                    { required: true, message: \"歌曲名不能为空\"}\n                ],\n                artist: [\n                    { required: true, message: \"歌手不能为空\"}\n                ],\n                src:[\n                    { required:true,message:\"歌曲不能为空\"}\n                ],\n                poster: [\n                    { required: true, message: \"歌曲封面不能为空\"}\n                ]\n            },\n            // 语种\n            Languages:[\"汉语\", \"韩语\", \"日语\", \"英语\", \"粤语\"],\n            SongStyle:[\"传统\", \"民歌\", \"摇滚\", \"伴奏\", \"古风\"],  // 歌曲风格\n        }\n    },\n    created(){\n        this.getAllSong();\n    },\n    methods:{\n        // 验证密码\n        checkPwd(){\n            if(this.inputPassword.trim().length){\n                this.isCheckPassword = false;\n                wsmLoading.start(\"正在验证密码,请稍候...\");\n                setTimeout(() => {\n                    this.$axios.post(\"http://localhost:8633/api/admin/islegal\",{\n                        password:this.inputPassword,\n                        email:this.$store.getters.adminInfo.email\n                    }).then(res => {\n                        console.log(res)\n                        if(res.data == true){\n                            if(this.flag == 1){  // 添加歌曲\n                                wsmLoading.start(\"密码正确, 正在添加歌曲\");\n                                this.$axios.post(\"http://localhost:8633/api/admin/music/add\", this.addForm)\n                                    .then(res => {\n                                        this.getAllSong();\n                                        this.$nextTick(() => { // 以服务的方式调用的 Loading 需要异步关闭\n                                            wsmLoading.end();\n                                            this.inputPassword = \"\";\n                                            this.$Message.success(\"添加成功\");\n                                        });\n                                    })\n                            }else if(this.flag == 2){ // 编辑歌曲\n                                wsmLoading.start(\"密码正确, 正在编辑歌曲歌曲\");\n                                this.$axios.post(\"http://localhost:8633/api/admin/music/edit\", this.editForm)\n                                    .then(res => {\n                                        console.log(res.data)\n                                        this.getAllSong();\n                                        this.$nextTick(() => { // 以服务的方式调用的 Loading 需要异步关闭\n                                            wsmLoading.end();\n                                            this.inputPassword = \"\";\n                                            this.$Message.success(\"更新成功\");\n                                        });\n                                    })\n                            }else if(this.flag == 3){  // 删除歌曲\n                                wsmLoading.start(\"密码正确, 正在删除歌曲..\");\n                                this.$axios.post(\"http://localhost:8633/api/admin/music/delete\", this.delRow)\n                                    .then(res => {\n                                        console.log(res.data);\n                                        this.getAllSong();\n                                        this.$nextTick(() => {\n                                            wsmLoading.end();\n                                            this.inputPassword = \"\";\n                                            this.$Message.success(\"删除成功\");\n                                        })\n                                    })\n                            }\n                        }\n                    }).catch(err => this.inputPassword = \"\")\n                }, 300)\n            }else{\n                this.isCheckPassword = false;\n                this.$Modal.warning({\n                    title:\"提示\",\n                    content:\"密码不能为空,请输入管理员口令...\",\n                    onOk:()=>{\n                        this.isCheckPassword = true;\n                    }\n                })\n            }\n        },\n        // 管理员收藏歌曲\n        likeSongs(song){\n            console.log(song)\n            this.$confirm(`要添加 ${song.songName} (${song.artist}) 歌曲到KTV推荐歌曲里吗? `,'操作提示', {\n                confirmButtonText:\"确定\",\n                cancelButtonText:\"取消\",\n                type:\"warning\"\n            }).then(() => {\n                this.$axios.post(\"http://localhost:8633/api/admin/adminlike/add\", {\n                    s_id:song._id\n                }).then(res => {\n                    this.$Message.success(\"收藏成功\");\n                }).catch(err => console.error(err))\n            }).catch(() => {\n            })\n        },\n        // 删除歌曲\n        onDeleteSong(song){\n            this.$confirm(`确定删除 ${song.songName} (${song.artist}) 歌曲吗?不可撤销,是否继续? `,'风险提示', {\n                confirmButtonText:\"确定\",\n                cancelButtonText:\"取消\",\n                type:\"warning\"\n            }).then(() => {\n                this.isCheckPassword = true;\n                this.flag = 3;\n                this.delRow = song;\n            }).catch(() => {\n            })\n            \n        },\n        okEditBtn(formName){\n            this.$refs[formName].validate(valid => {\n                if(valid){\n                    this.isCheckPassword = true;\n                    this.editDialog.show = false;\n                    this.flag = 2;\n                }\n                // 不合法\n            })\n        },\n        // 编辑歌曲\n        onEditSong(song){\n            console.log(song)\n            this.editForm = {...song};\n            this.editDialog.show = true;\n            this.clearFiles();\n        },\n        // 成功上传歌曲\n        handleEditSongSuccess(res){\n            console.log(res)\n            this.editForm.src = res.result.src;\n            this.firstEdit = false;\n        },\n        // 成功上传图片\n        handleEditPosterSuccess(res){\n            console.log(res)\n            this.editForm.poster = res.result.poster;\n            console.log(this.editForm)\n        },\n        // 搜索歌曲\n        searchSong(){\n            if(this.searchName.trim().length){\n                this.$axios.post(\"http://localhost:8633/api/music/search/byname\",{\n                    searchName:this.searchName\n                }).then(res => {\n                    this.allSongs = res.data;\n                    this.allTableData = res.data;\n                    this.setPaginations();\n                })\n            }else{\n                this.$Message.warning(\"搜索内容不能为空..\")\n            }\n        },\n        // 添加音乐\n        addSong(formName){\n            this.$refs[formName].validate(valid => {\n                if(valid){\n                    this.isCheckPassword = true;\n                    this.addDialog.show = false;\n                    this.flag = 1;\n                }\n                // 不合法\n            })\n        },\n        // 显示添加音乐模态框\n        showAddSongBtn(){\n            this.addDialog.show = true;\n            this.addForm.songName = \"\";\n            this.addForm.artist = \"\";\n            this.addForm.src = \"\";\n            this.addForm.poster = \"\";\n            this.addForm.language = \"\";\n            this.addForm.style = \"\";\n            this.addForm.playcount = \"\";\n            this.addForm.date = \"\";\n            this.clearFiles();\n        },\n        // 成功添加歌曲回调\n        handleAddSongSuccess(res){\n            console.log(res)\n            this.addForm.src = res.result.src;\n        },\n        // 成功添加歌曲海报回调\n        handleAddPosterSuccess(res){\n            this.isfirst = true;\n            console.log(res)\n            this.addForm.poster = res.result.poster;\n        },\n        clearFiles(){\n            if(this.firstEdit == false){\n                this.$refs.editmusic.clearFiles();\n            }\n            if(this.isfirst == true){\n                this.$refs.uploadmusic.clearFiles();\n            }\n        },\n        listenMusic(song){\n            this.toListenSrc = `http://localhost:8633/api/music/nowmusic?id=${song._id}`\n            this.toListenPoster = `http://localhost:8633/api/music/poster?img=${song.poster}`\n            setTimeout(() => {\n                console.log(this.$refs.musicPlayer.duration)\n            }, 200)\n        },\n        // 操作音乐\n        operaMusic(){\n            if(this.$refs.musicPlayer.paused){\n                $(\".listen-poster\").css(\"animation-play-state\", \"running\");\n                this.$refs.musicPlayer.play();\n            }else{\n                $(\".listen-poster\").css(\"animation-play-state\", \"paused\");\n                this.$refs.musicPlayer.pause();\n            }\n        },\n        ended(){\n            this.$refs.musicPlayer.play();\n        },\n        // 获取所有歌曲\n        getAllSong(){\n            this.$axios.get(\"http://localhost:8633/api/music/all\")\n                .then(res => {\n                    if(res.data.length){\n                        this.allSongs = res.data;\n                        this.noChangeSongs = res.data;\n                        this.allTableData = res.data;\n                        this.setPaginations();\n                    }else{\n                        console.error(res);\n                    }\n                }).catch(err => console.log(err))\n        },\n        // 设置当前页\n        handleCurrentChange(page) {\n            // 获取当前页\n            let sortnum = this.paginations.page_size * (page - 1);\n            let table = this.allTableData.filter((item, index) => {\n                return index >= sortnum;\n            });\n            // 设置默认分页数据\n            this.allSongs = table.filter((item, index) => {\n                return index < this.paginations.page_size;\n            });\n            this.allSongs = table.filter((item, index) => {\n                return index < this.paginations.page_size;\n            });\n        },\n        // 改变每页条数\n        handleSizeChange(page_size) {\n            // 切换size\n            this.paginations.page_index = 1;\n            this.paginations.page_size = page_size;\n            this.allSongs = this.allTableData.filter((item, index) => {\n                return index < page_size;\n            });\n        },\n        // 设置的分页\n        setPaginations() {\n            // 总页数\n            this.paginations.total = this.allTableData.length;\n            this.paginations.page_index = 1;\n            this.paginations.page_size = 8;\n            // 设置默认分页数据\n            this.allSongs = this.allTableData.filter((item, index) => {\n                return index < this.paginations.page_size;\n            });\n        },\n    }\n}\n</script>\n<style lang=\"less\" scoped>\n.managemusic{\n    width: 100%;\n    height: 100%;\n    padding: 20px 60px;\n    \n\n    .listen-poster{\n        cursor: pointer;\n        animation: poster 15s linear infinite;\n    }\n    @keyframes poster {\n        from{\n            transform: rotate(0deg);\n        }\n        to{\n            transform: rotate(360deg);\n        }\n    }\n}\n.toListen-link{\n    cursor: pointer;\n    &:hover{\n        color: rgb(223, 107, 72);\n    }\n}\n</style>"],"sourceRoot":"src/views"}]}