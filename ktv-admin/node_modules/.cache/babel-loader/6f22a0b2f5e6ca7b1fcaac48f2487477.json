{"remainingRequest":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\src\\views\\allorders.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\src\\views\\allorders.vue","mtime":1585972675000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\研课程\\ktv-select_music-system-master\\ktv-select_music-system-master\\ktv-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport wsmLoading from \"@/plugins/wsmLoading\";\nexport default {\n  name: \"allorders\",\n  data: function data() {\n    return {\n      isCheckPassword: false,\n      inputPassword: '',\n      noChangeData: [],\n      selectDate: \"\",\n      allorders: [],\n      allTableData: [],\n      paginations: {\n        // 分页属性\n        page_index: 1,\n        // 当前位于哪页\n        total: 0,\n        // 总数\n        page_size: 8,\n        // 1页显示多少条\n        page_sizes: [8, 15, 20, 25],\n        //每页显示多少条\n        layout: \"total, sizes, prev, pager, next, jumper\" // 翻页属性\n\n      },\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      delRow: \"\"\n    };\n  },\n  created: function created() {\n    this.getAllOrders();\n  },\n  methods: {\n    checkPwd: function checkPwd() {\n      var _this = this;\n\n      if (this.inputPassword.trim().length) {\n        this.isCheckPassword = false;\n        wsmLoading.start(\"正在验证密码,请稍候...\");\n        setTimeout(function () {\n          _this.$axios.post(\"http://localhost:8633/api/admin/islegal\", {\n            password: _this.inputPassword,\n            email: _this.$store.getters.adminInfo.email\n          }).then(function (res) {\n            if (res.data == true) {\n              _this.$axios.post(\"http://localhost:8633/api/admin/orders/del\", _this.delRow).then(function (res) {\n                _this.$nextTick(function () {\n                  _this.getAllOrders();\n\n                  wsmLoading.end();\n\n                  _this.$Message.success(res.data.result);\n                });\n              });\n            }\n          }).catch(function () {\n            return _this.isCheckPassword = true;\n          });\n        }, 300);\n      } else {\n        this.isCheckPassword = false;\n        this.$Modal.warning({\n          title: \"提示\",\n          content: \"密码不能为空,请输入管理员口令...\",\n          onOk: function onOk() {\n            _this.isCheckPassword = true;\n          }\n        });\n      }\n    },\n    getAllOrders: function getAllOrders() {\n      var _this2 = this;\n\n      this.selectDate = '';\n      this.$axios.get(\"http://localhost:8633/api/admin/orders/all\").then(function (res) {\n        _this2.noChangeData = res.data;\n        _this2.allorders = res.data;\n        _this2.allTableData = res.data;\n\n        _this2.setPaginations();\n      });\n    },\n    onDeleteSong: function onDeleteSong(order) {\n      var _this3 = this;\n\n      this.$confirm(\"你确定要删除这条订单信息吗?不可恢复是否继续?\", '提示', {\n        confirmButtonText: \"确定\",\n        cancleTextButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this3.isCheckPassword = true;\n        _this3.delRow = order;\n      }).catch(function () {\n        return console.log(\"cancle\");\n      });\n    },\n    findorders: function findorders() {\n      var startTime = new Date(this.selectDate[0]).getTime();\n      var endTime = new Date(this.selectDate[1]).getTime();\n      var result = [];\n      this.noChangeData.forEach(function (item) {\n        var time = new Date(item.startTime).getTime();\n\n        if (time >= startTime && time <= endTime) {\n          result.push(item);\n        }\n      });\n      this.allorders = result;\n      this.allTableData = result;\n      this.setPaginations();\n    },\n    // 设置当前页\n    handleCurrentChange: function handleCurrentChange(page) {\n      var _this4 = this;\n\n      // 获取当前页\n      var sortnum = this.paginations.page_size * (page - 1);\n      var table = this.allTableData.filter(function (item, index) {\n        return index >= sortnum;\n      }); // 设置默认分页数据\n\n      this.allorders = table.filter(function (item, index) {\n        return index < _this4.paginations.page_size;\n      });\n      this.allorders = table.filter(function (item, index) {\n        return index < _this4.paginations.page_size;\n      });\n    },\n    // 改变每页条数\n    handleSizeChange: function handleSizeChange(page_size) {\n      // 切换size\n      this.paginations.page_index = 1;\n      this.paginations.page_size = page_size;\n      this.allorders = this.allTableData.filter(function (item, index) {\n        return index < page_size;\n      });\n    },\n    // 设置的分页\n    setPaginations: function setPaginations() {\n      var _this5 = this;\n\n      // 总页数\n      this.paginations.total = this.allTableData.length;\n      this.paginations.page_index = 1;\n      this.paginations.page_size = 8; // 设置默认分页数据\n\n      this.allorders = this.allTableData.filter(function (item, index) {\n        return index < _this5.paginations.page_size;\n      });\n    }\n  }\n};",{"version":3,"sources":["allorders.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"allorders\">\n        <Row style=\"padding:20px 60px 20px 40px;\">\n            <Col style=\"padding:0px 0px 0px 40px;\" span=\"20\">\n                <el-date-picker\n                v-model=\"selectDate\"\n                size=\"small\"\n                type=\"datetimerange\"\n                :picker-options=\"pickerOptions\"\n                range-separator=\"至\"\n                start-placeholder=\"开始日期\"\n                format=\"yyyy/MM/dd HH:mm:ss\"\n                end-placeholder=\"结束日期\"\n                align=\"right\">\n                </el-date-picker>\n                <Button type=\"primary\" v-if=\"selectDate\" style=\"margin-left:10px;\" @click=\"findorders\">查询</Button>\n            </Col>\n            <Col :span=\"4\" style=\"text-align:right;\">\n                <Button type=\"primary\" @click=\"getAllOrders\">所有订单</Button>\n            </Col>\n        </Row>\n        <!-- 订单数据表 -->\n        <div style=\"width:100%;background-color:#f40;\">\n            <el-table\n                :data=\"allorders\"\n                class=\"order-table\"\n                style=\"width: 100%\"\n                border\n            >\n                <el-table-column\n                    type=\"index\"\n                    label=\"序号\"\n                    align=\"center\"\n                    width=\"60\">\n                </el-table-column>\n                <el-table-column\n                    prop=\"order_id\"\n                    label=\"订单编号\"\n                    align=\"center\"\n                    width=\"250\">\n                </el-table-column>\n                <el-table-column\n                    label=\"账号\"\n                    prop=\"account\"\n                    align=\"center\"\n                    width=\"200\">\n                </el-table-column>\n                <el-table-column\n                    prop=\"publicpwd\"\n                    label=\"明文密码\"\n                    align=\"center\"\n                    width=\"150\">\n                </el-table-column>\n                <el-table-column\n                    prop=\"money\"\n                    align=\"center\"\n                    width=\"100\"\n                    label=\"金额\">\n                </el-table-column>\n                <el-table-column\n                    align=\"center\"\n                    prop=\"startTime\"\n                    width=\"200\"\n                    label=\"开始时间\">\n                </el-table-column>\n                <el-table-column\n                    align=\"center\"\n                    prop=\"endTime\"\n                    width=\"200\"\n                    label=\"结束时间\">\n                </el-table-column>\n                <el-table-column\n                    align=\"center\"\n                    prop=\"password\"\n                    width=\"300\"\n                    label=\"密文\">\n                </el-table-column>\n                <el-table-column\n                    prop=\"operation\"\n                    align='center'\n                    label=\"操作\"\n                    fixed=\"right\"\n                    width=\"100\">\n                    <template slot-scope='scope'>\n                        <el-button \n                            type=\"danger\" \n                            icon='el-icon-delete' \n                            size=\"small\"\n                            circle\n                            @click='onDeleteSong(scope.row,scope.$index)'\n                        ></el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n        </div>\n        <!-- 分页 -->\n        <Row>\n            <Col span=\"24\" style=\"text-align:right;padding:10px;\">\n                <el-pagination\n                    v-if='paginations.total > 0'\n                    :page-sizes=\"paginations.page_sizes\"\n                    :page-size=\"paginations.page_size\"\n                    :layout=\"paginations.layout\"\n                    :total=\"paginations.total\"\n                    :current-page.sync='paginations.page_index'\n                    @current-change='handleCurrentChange'\n                    @size-change='handleSizeChange'>\n                </el-pagination>\n            </Col>\n        </Row>\n\n        <!-- 验证密码 -->\n        <Modal draggable v-model=\"isCheckPassword\" :mask-closable=\"false\" width=\"360\">\n            <p slot=\"header\" style=\"color:#f60;\">\n                <Icon type=\"ios-information-circle\"></Icon>\n                <span>验证密码</span>\n            </p>\n            <div style=\"text-align:left;font-size:14px;\">\n                <Row>\n                    <Col span=\"18\">\n                        <Input v-model=\"inputPassword\" type=\"password\" icon=\"ios-key\" @keyup.enter.native=\"checkPwd()\"  placeholder=\"请输入管理员密码...\" style=\"width: 200px\" />\n                    </Col>\n                    <Col span=\"6\">\n                        <Button type=\"primary\" size=\"large\" @click=\"checkPwd()\">验证</Button>\n                    </Col>\n                </Row>\n            </div>\n            <div slot=\"footer\">\n            </div>\n        </Modal>\n    </div>\n</template>\n<script>\nimport wsmLoading from \"@/plugins/wsmLoading\"\nexport default {\n    name:\"allorders\",\n    data(){\n        return{\n            isCheckPassword:false,\n            inputPassword:'',\n            noChangeData:[],\n            selectDate:\"\",\n            allorders:[],\n            allTableData:[],\n            paginations: {  // 分页属性\n                page_index: 1, // 当前位于哪页\n                total: 0, // 总数\n                page_size: 8, // 1页显示多少条\n                page_sizes: [8, 15, 20, 25], //每页显示多少条\n                layout: \"total, sizes, prev, pager, next, jumper\" // 翻页属性\n            },\n            pickerOptions: {\n                shortcuts: [{\n                    text: '最近一周',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n                    picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: '最近一个月',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n                    picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: '最近三个月',\n                    onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n                    picker.$emit('pick', [start, end]);\n                    }\n                }]\n            },\n            delRow:\"\"\n        }\n    },\n    created(){\n        this.getAllOrders();\n    },\n    methods:{\n        checkPwd(){\n            if(this.inputPassword.trim().length){\n                this.isCheckPassword = false;\n                wsmLoading.start(\"正在验证密码,请稍候...\");\n                setTimeout(() => {\n                    this.$axios.post(\"http://localhost:8633/api/admin/islegal\",{\n                        password:this.inputPassword,\n                        email:this.$store.getters.adminInfo.email\n                    }).then(res => {\n                        if(res.data == true){\n                            this.$axios.post(\"http://localhost:8633/api/admin/orders/del\", this.delRow)\n                                    .then(res => {\n                                        this.$nextTick(() => {\n                                            this.getAllOrders();\n                                            wsmLoading.end();\n                                            this.$Message.success(res.data.result);\n                                        })\n                                    })\n                        }\n                    }).catch(() => this.isCheckPassword = true)\n                }, 300)\n            }else{\n                this.isCheckPassword = false;\n                this.$Modal.warning({\n                    title:\"提示\",\n                    content:\"密码不能为空,请输入管理员口令...\",\n                    onOk:()=>{\n                        this.isCheckPassword = true;\n                    }\n                })\n            }\n        },\n        getAllOrders(){\n            this.selectDate = '';\n            this.$axios.get(\"http://localhost:8633/api/admin/orders/all\")\n                    .then(res => {\n                        this.noChangeData = res.data;\n                        this.allorders = res.data;\n                        this.allTableData = res.data;\n                        this.setPaginations();\n                    })\n        },\n        onDeleteSong(order){\n            this.$confirm(\"你确定要删除这条订单信息吗?不可恢复是否继续?\", '提示', {\n                confirmButtonText:\"确定\",\n                cancleTextButtonText:\"取消\",\n                type:\"warning\"\n            }).then(() => {\n                this.isCheckPassword = true;\n                this.delRow = order;\n            }).catch(() => console.log(\"cancle\"))\n        },\n        findorders(){\n            const startTime = new Date(this.selectDate[0]).getTime();\n            const endTime = new Date(this.selectDate[1]).getTime();\n            const result = [];\n            this.noChangeData.forEach(item => {\n                const time = new Date(item.startTime).getTime();\n                if(time >= startTime && time <= endTime){\n                    result.push(item)\n                }\n            })\n            this.allorders = result;\n            this.allTableData = result;\n            this.setPaginations();\n        },\n        // 设置当前页\n        handleCurrentChange(page) {\n            // 获取当前页\n            let sortnum = this.paginations.page_size * (page - 1);\n            let table = this.allTableData.filter((item, index) => {\n                return index >= sortnum;\n            });\n            // 设置默认分页数据\n            this.allorders = table.filter((item, index) => {\n                return index < this.paginations.page_size;\n            });\n            this.allorders = table.filter((item, index) => {\n                return index < this.paginations.page_size;\n            });\n        },\n        // 改变每页条数\n        handleSizeChange(page_size) {\n            // 切换size\n            this.paginations.page_index = 1;\n            this.paginations.page_size = page_size;\n            this.allorders = this.allTableData.filter((item, index) => {\n                return index < page_size;\n            });\n        },\n        // 设置的分页\n        setPaginations() {\n            // 总页数\n            this.paginations.total = this.allTableData.length;\n            this.paginations.page_index = 1;\n            this.paginations.page_size = 8;\n            // 设置默认分页数据\n            this.allorders = this.allTableData.filter((item, index) => {\n                return index < this.paginations.page_size;\n            });\n        },\n    }\n}\n</script>\n<style lang=\"less\" scoped>\n.allorders{\n    width: 100%;\n    height: 100%;\n    padding: 20px 60px;\n}\n</style>"],"sourceRoot":"src/views"}]}